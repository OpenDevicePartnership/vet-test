name: Generate Commit List

on:
  workflow_call:
    inputs:
      event_name:
        description: "The GitHub event name (push or pull_request)"
        required: true
        type: string
      base_ref:
        description: "The base branch reference (for pull requests)"
        type: string
      head_sha:
        description: "The head SHA of the pull request or push"
        required: true
        type: string
    outputs:
      commits:
        description: "List of commits to process"
        value: ${{ jobs.commit_list.outputs.commits }}

jobs:
  commit_list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit list (push)
        id: get_commit_list_push
        if: ${{ inputs.event_name == 'push' }}
        run: |
          echo "id0=${{ inputs.head_sha }}" > $GITHUB_OUTPUT
          echo "List of tested commits:" > $GITHUB_STEP_SUMMARY
          sed -n 's,^id[0-9]\+=\(.*\),- ${{ github.repositoryUrl }}/commit/\1,p' -- $GITHUB_OUTPUT >> $GITHUB_STEP_SUMMARY

      - name: Get commit list (PR)
        id: get_commit_list_pr
        if: ${{ inputs.event_name == 'pull_request' }}
        run: |
          git rev-list --reverse refs/remotes/origin/${{ inputs.base_ref }}..${{ inputs.head_sha }} | awk '{ print "id" NR "=" $1 }' > $GITHUB_OUTPUT
          git diff --quiet ${{ inputs.head_sha }} ${{ github.sha }} || echo "id0=$GITHUB_SHA" >> $GITHUB_OUTPUT
          echo "List of tested commits:" > $GITHUB_STEP_SUMMARY
          sed -n 's,^id[0-9]\+=\(.*\),- ${{ github.repositoryUrl }}/commit/\1,p' -- $GITHUB_OUTPUT >> $GITHUB_STEP_SUMMARY

    outputs:
      commits: ${{ toJSON(steps.*.outputs.*) }}